// Prisma schema for WebFlow Studio authentication
// Uses PostgreSQL database

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  name         String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  sessions     Session[]
  projects     Project[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  expiresAt DateTime

  @@index([userId])
}

model Project {
  id            String        @id @default(uuid())
  name          String
  slug          String        @unique
  status        ProjectStatus @default(IN_PROGRESS)
  description   String?
  owner         String?
  repositoryUrl String?
  metrics       Json?
  canvasState   Json?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  createdById   String?
  createdBy     User?         @relation(fields: [createdById], references: [id], onDelete: SetNull)
  dataSources   DataSource[]

  @@index([status])
  @@index([createdAt])
}

enum ProjectStatus {
  IN_PROGRESS
  DEMO
  PREPARATION
}

model DataSource {
  id          String           @id @default(uuid())
  projectId   String
  project     Project          @relation(fields: [projectId], references: [id], onDelete: Cascade)
  name        String
  type        DataSourceType
  endpoint    String?
  method      String?
  headers     Json?
  description String?
  config      Json?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  samples     DataSample[]

  @@index([projectId])
  @@index([type])
}

model DataSample {
  id           String     @id @default(uuid())
  dataSourceId String
  dataSource   DataSource @relation(fields: [dataSourceId], references: [id], onDelete: Cascade)
  label        String
  payload      Json
  createdAt    DateTime   @default(now())

  @@index([dataSourceId])
}

enum DataSourceType {
  REST
  GRAPHQL
  MOCK
}
